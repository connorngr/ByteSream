// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  email        String         @unique
  password     String? // Make password optional for OAuth users
  oauthId      String?        @unique // Add oauthId field for OAuth users
  createdAt    DateTime       @default(now())
  role         Role           @default(USER)
  savedArticle SavedArticle[]
}

enum Role {
  ADMIN
  USER
}

model Article {
  id           String         @id @default(uuid())
  title        String
  description  String?        @db.Text
  summary      String?        @db.Text
  translation  String?        @db.Text
  sourceUrl    String         @unique
  publishedAt  DateTime
  thumbnailUrl String?
  tags         String[]
  savedByUsers SavedArticle[]
}

model SavedArticle {
  id        String   @id @default(uuid())
  userId    String
  articleId String
  savedAt   DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  article Article @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@unique([userId, articleId])
}

model ScrapingLog {
  id           String   @id @default(uuid())
  sourceUrl    String   @db.Text
  status       Status
  scrapedAt    DateTime @default(now())
  errorMessage String?  @db.Text
}

enum Status {
  SUCCESS
  FAILED
}
